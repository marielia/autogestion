<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Generated 22-dic-2009 16:48:24 by Hibernate Tools 3.2.0.beta7 -->
<hibernate-mapping>
    <class name="com.refinor.extranet.data.McuentasBancos" table="MCuentasBancos" >
        <composite-id name="id" class="com.refinor.extranet.data.McuentasBancosId">
            <key-property name="nroOper" type="int">
                <column name="NroOper" />
            </key-property>
            <key-property name="codOper" type="string">
                <column name="CodOper" length="10" />
            </key-property>
            <key-property name="ccssid" type="int">
                <column name="CCSSId" />
            </key-property>
        </composite-id>
        <property name="bcoSucCtaSist" type="string">
            <column name="BcoSucCtaSist" length="30" />
        </property>
        <property name="importe" type="java.lang.Double">
            <column name="Importe" precision="53" scale="0" />
        </property>
        <property name="idCheque" type="java.lang.Integer">
            <column name="IdCheque" />
        </property>
        <property name="fhOper" type="timestamp">
            <column name="FhOper" length="16" />
        </property>
        <property name="fhAlta" type="timestamp">
            <column name="FhAlta" length="16" />
        </property>
        <property name="fhBaja" type="timestamp">
            <column name="FhBaja" length="16" />
        </property>
        <property name="idUserLock" type="java.lang.Integer">
            <column name="IdUserLock" />
        </property>
        <property name="nroEjercicioContable" type="java.lang.Long">
            <column name="NroEjercicioContable" precision="18" scale="0" />
        </property>
        <property name="nroAsientoContable" type="java.lang.Long">
            <column name="NroAsientoContable" precision="18" scale="0" />
        </property>
        <property name="nroRendicionRefipass" type="java.lang.Long">
            <column name="NroRendicionRefipass" precision="18" scale="0" />
        </property>
        <property name="rowguid" type="string">
            <column name="rowguid" length="36" not-null="true" unique="true" />
        </property>
        <property name="nroOperCaja" type="java.lang.Integer">
            <column name="NroOper_Caja" />
        </property>
    </class>
    
    
    <sql-query name="findRendicionesPorCCSSRendicion">
    <query-param name="codCcss" type="integer" />
    <query-param name="nroRendicion" type="integer" />
    
		<![CDATA[
		
		SELECT
			    p.nrooper,
				c.cod_ccss as ccssId,
				c.desc_ccss as descCCSS,
				p.nroEjercicioContable as nroEjercicio,
				p.nroAsientoContable as nroAsiento,
				p.bcosucctasist as cuentaBanco,
				p.fhOper as fecha,
				p.importe as importe,		
				'RENDICION CONTADO' as compr,	
				p.codoper as tipoOper,	
				p.nroRendicionRefipass as nroRendicion,
				p.nrooper_caja as nroOperRendicion		
				
		FROM  Mccss c  inner join mcuentasbancos p on p.ccssid = c.cod_ccss
		WHERE
				(c.f_baja is null) 
				and codoper like 'CRBCOP'
				and (p.nroEjercicioContable <> 0 or p.nroEjercicioContable!=null)
				and (p.nroAsientoContable  <> 0 or p.nroAsientoContable!=null)
				and (p.nrorendicionrefipass=:nroRendicion  or  :nroRendicion=-1)
				and (p.ccssid = :codCcss or :codCcss = -1)
		ORDER BY p.nroRendicionRefipass
    
     ]]>
    </sql-query>
    
     <sql-query name="findTransferenciaPorNroOperRendicion">
     <query-param name="nroOperRendicion" type="integer" />
     <query-param name="nroRendicion" type="integer" />
    
		<![CDATA[
    

SELECT
        p.nrooper as nrooper,
		c.cod_ccss as ccssId,
		c.desc_ccss as descCCSS,
		p.nroEjercicioContable as nroEjercicio,
		p.nroAsientoContable as nroAsiento,
		p.bcosucctasist as cuentaBanco,
		p.fhOper as fecha,
		p.importe as importe,		
		'TRANFERENCIA POR REND. CTDO.' as compr,	
		p.codoper as tipoOper,	
		p.nroRendicionRefipass as nroRendicion,
		p.nrooper_caja as nroOperRendicion
		
		
		from Mccss c  inner join mcuentasbancos p on  p.ccssid = c.cod_ccss
		Where
		(c.f_baja is null) 
and codoper like 'ACRCHQ'
and nrooper_Caja = :nroOperRendicion
and nrorendicionrefipass= :nroRendicion 
and (p.nroEjercicioContable <> 0 or p.nroEjercicioContable!=null)
and (p.nroAsientoContable  <> 0 or p.nroAsientoContable!=null)
     ]]>
    </sql-query>
    
</hibernate-mapping>
