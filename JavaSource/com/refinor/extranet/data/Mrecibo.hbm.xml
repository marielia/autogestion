<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Generated 05-mar-2008 18:34:29 by Hibernate Tools 3.2.0.beta7 -->
<hibernate-mapping>
    <class name="com.refinor.extranet.data.Mrecibo" table="MRecibo" schema="dbo" >
        <id name="nroRec" type="int">
            <column name="nro_rec" />
            <generator class="assigned" />
        </id>
        <property name="ccss" type="java.lang.Integer">
            <column name="ccss" />
        </property>
        <property name="cliente" type="java.lang.Integer">
            <column name="cliente" />
        </property>
        <property name="importe" type="big_decimal">
            <column name="importe" precision="12" />
        </property>
        <property name="nroOperCaja" type="java.lang.Integer">
            <column name="nroOperCaja" />
        </property>
        <property name="fhBaja" type="timestamp">
            <column name="fh_baja" length="16" />
        </property>
        <property name="idUser" type="string">
            <column name="id_user" length="25" />
        </property>
        <property name="fecha" type="timestamp">
            <column name="fecha" length="16" />
        </property>
        <property name="turnoVig" type="java.lang.Long">
            <column name="turno_vig" precision="18" scale="0" />
        </property>
    </class>
    
    <sql-query name="findRecibosByFechas">    
    	<query-param name="fechaDesde" type="timestamp"/>
	    <query-param name="fechaHasta" type="timestamp"/>  
	    <query-param name="codCliente" type="string"/>
	    <query-param name="nroReciboDesde" type="integer"/>
	    <query-param name="nroReciboHasta" type="integer"/>
	    
	 		select 
			nro_rec as recibo,
			importe as importe,
			fecha as fecha,
			cliente as cliente,
			c.descripcion as descrCli,
			r.nroOperCaja as nroOper,
			r.fh_baja as fechaBaja
			
			from mrecibo r,mclientes c
			where (dbo.fechaSinHora(fecha) between dbo.fechaSinHora(:fechaDesde) and dbo.fechaSinHora(:fechaHasta) or dbo.fechaSinHora(:fechaDesde) is null and dbo.fechaSinHora(:fechaHasta) is null)
			and r.cliente = c.codigo and
			c.cod_cliente_alfa like :codCliente and
			(r.nro_rec between :nroReciboDesde and :nroReciboHasta or (:nroReciboDesde is null and :nroReciboHasta is null )) 
			order by r.fecha desc, nro_rec desc
      	
    </sql-query>
    
    <sql-query name="findRecibosByFechasNroReciboCliente">    
    	<query-param name="fechaDesde" type="timestamp"/>
	    <query-param name="fechaHasta" type="timestamp"/>  
	    <query-param name="nroReciboDesde" type="integer"/>
	    <query-param name="nroReciboHasta" type="integer"/>
	    <query-param name="clienteDesde" type="string"/>
  	    <query-param name="clienteHasta" type="string"/>
	 		
	 	select
		cl.cod_cliente_alfa as codClienteAlfa,
		cl.descripcion as razonCliente,
		r.fecha as fechaRecibo,
		'Recibo' as tipoCompRec,
		r.ccss as puntoServicio,
		r.nro_rec as nroRec,
		isnull(c.importe,0) as importeCtacte,
		f.tipo as tipoFac,
		f.nroSucursal as nroSuc,
		f.nroFactura as nroFac,
		f.fevto as fevto,
		r.fh_baja as fechaBaja,
		mc.desc_ccss as descCcss,
		isnull(r.importe,0) as importeRecibo
				
		from mrecibo r, mctasctes c, mFacturasV f,mclientes cl,MCcss mc
		where 
		r.nroOperCaja = c.nroOperCaja and
				
		rtrim(Ltrim(c.TipoOper)) = rtrim(ltrim('Cobro Factura Cliente')) and
		(c.nroOper = f.orden and
		c.sucursal = f.NroSucursal) and
		cl.codigo = r.cliente and
		(cod_cliente_alfa  between :clienteDesde and  :clienteHasta or :clienteDesde is null and :clienteHasta is null) and
		(r.nro_rec between :nroReciboDesde and :nroReciboHasta or (:nroReciboDesde is null and :nroReciboHasta is null )) and
		(r.fecha between :fechaDesde and :fechaHasta or  :fechaDesde is  null  and :fechaHasta is null ) and
		mc.cod_ccss = r.ccss
		order by nro_rec	
      	
    </sql-query>
    
    
    <sql-query name="findRecibosSinFacturaByFechasNroReciboCliente">    
    	<query-param name="fechaDesde" type="timestamp"/>
	    <query-param name="fechaHasta" type="timestamp"/>  
	    <query-param name="nroReciboDesde" type="integer"/>
	    <query-param name="nroReciboHasta" type="integer"/>
	    <query-param name="clienteDesde" type="string"/>
  	    <query-param name="clienteHasta" type="string"/>
	 		
	 	
		select
		cl.cod_cliente_alfa as codclienteAlfa,
		cl.descripcion as razonCliente,
		r.fecha as fechaRecibo,
		'RECIBO' as tipoCompRec,
		r.ccss as puntoServicio,
		r.nro_rec as nroRec,
		isnull(c.importe,0) as importeCtacte,
		null as tipoFac,
		0 as nroSuc,
		0 as nroFac,
		null as fevto,
		r.fh_baja as fechaBaja,
		mc.desc_ccss as descCcss,
		isnull(r.importe,0) as importeRecibo
				
		from mrecibo r, mctasctes c, mclientes cl,MCcss mc
		where 
		r.nroOperCaja = c.nroOperCaja and				
		rtrim(Ltrim(c.TipoOper)) = rtrim(ltrim('PagoAdel')) and		
		cl.codigo = r.cliente and
		(cod_cliente_alfa  between :clienteDesde and  :clienteHasta or :clienteDesde is null and :clienteHasta is null) and
		(r.nro_rec between :nroReciboDesde and :nroReciboHasta or (:nroReciboDesde is null and :nroReciboHasta is null )) and
		(r.fecha between :fechaDesde and :fechaHasta or  :fechaDesde is  null  and :fechaHasta is null ) and
		mc.cod_ccss = r.ccss and
		r.nro_rec not in ( select		
				r.nro_rec
				from mrecibo r, mctasctes c, mFacturasV f,mclientes cl,MCcss mc
				where 
				r.nroOperCaja = c.nroOperCaja and						
				rtrim(Ltrim(c.TipoOper)) = rtrim(ltrim('Cobro Factura Cliente')) and
				(c.nroOper = f.orden and
				c.sucursal = f.NroSucursal) and
				cl.codigo = r.cliente and
				(cod_cliente_alfa  between :clienteDesde and  :clienteHasta or :clienteDesde is null and :clienteHasta is null) and
				(r.nro_rec between :nroReciboDesde and :nroReciboHasta or (:nroReciboDesde is null and :nroReciboHasta is null )) and
				(r.fecha between :fechaDesde and :fechaHasta or  :fechaDesde is  null  and :fechaHasta is null ) and
				mc.cod_ccss = r.ccss
				)
		order by nro_rec
      	
    </sql-query>
    
    
    <sql-query name="findRecibosWithRetenciones">    
    	<query-param name="fechaDesde" type="timestamp"/>
	    <query-param name="fechaHasta" type="timestamp"/>  	   
	    <query-param name="clienteDesde" type="string"/>
  	    <query-param name="clienteHasta" type="string"/>
	 		
	 	Select 
		r.nro_rec,
		r.fecha,
		
		10 as ctrIVA,
		'IVA' as trIVA,
		isnull(c.nroCertIva,0) as nrocertiva,
		c.fechaCertIva as fechaIva,
		isnull(c.retIva,0) as importeIva,
		
		11 as ctrGan,
		'Ganacias' as trGan,
		isnull(c.certGcias,0) as nroCertGanancia,
		isnull(c.retGcias,0) as importeGanancias,
		c.fechaCertGan as fechaGan,
		
		12 as ctrib,
		'Ingresos Brutos' as trib,
		isnull(c.certIngrBrt,0) as nroCertIngresoBrutos,
		isnull(c.retIngrBrt,0) as importeIngresoBrutos,
		getdate()  as fechaIngBruto,
		isnull(c.jurIngrBrt,0) as juridIngresoBrutos,
		
		13 as ctrsijp,
		'SIJP' as trsijp,
		0 as nroCertSIJP,
		getdate() as fechaSIJP,
		isnull(c.retSIJP,0) as importeSIJP,
		
		14 as ctrsegsoc,
		'Seguridad social' as trsegsoc,
		isnull(c.nroCertSegSoc,0) as nroCertSegSoc,
		c.fechaCertSegSoc as fechasegsoc,
		isnull(c.retSIJP,0) as importe,
		
		15 as ctrtrs,
		'TRS' as trtrs,
		isnull(c.nroCertTRS,0) as nrocerttrs,
		c.fechaCertTRS as fechatrs,
		isnull(c.trs,0) as importeTRS,
		isnull(c.jurCertTRS,0) as juritrs,
		
		cl.cod_cliente_alfa as codcliealfa,
		cl.codigo as codcli,
		cl.descripcion as razonsoc,
		
		
		r.fh_baja,
		
		16 as ctissh,
		'TISSH' as trtissh,
		isnull(c.NroCertTISSH,0)  as nroCertTISSH,
		c.fechaCertTISSH as fechaCertTISSH,
		isnull(c.tissh,0) as importeTISSH,
		
		
		17 as ctmt,
		'Tasa Municipal de Tartagal' as trtmt,
		isnull(c.nroTMTartagal,0)  as NroTMTartagal,
		c.fecTmTartagal as fecTmTartagal,
		isnull(c.impTMTartagal,0) as importetmt,
		
		18 as ctemtuc,
		'Percepci√≥n TEM SM TUC' as trtemtuc,
		isnull(c.NroPercTEMTUc,0)  as NroPercTEMTUc,
		c.FecPercTEMTUc as FecPercTEMTUc,
		isnull(c.ImpPercTEMTUc,0) as ImpPercTEMTUc
		
		from mCaja c, mRecibo r, mClientes cl
		where 
		c.nroOper=r.nroOperCaja and
		r.cliente = cl.codigo and
		(cl.cod_cliente_alfa  between :clienteDesde and  :clienteHasta or :clienteDesde is null and :clienteHasta is null) and
		(r.fecha between :fechaDesde and :fechaHasta or  :fechaDesde is  null  and :fechaHasta is null )
		order by nro_rec desc		
      	
    </sql-query>
    
     
    <sql-query name="findRecibosAplicados">    
    	<query-param name="nroOperacion" type="integer"/>
	    <query-param name="nroSucursal" type="integer"/>  
	    <query-param name="codCliente" type="integer"/>
	    
	    
		select 
		'Recibo' as nombre,
		r.nro_rec as nroRec,
		r.fecha as fecha,
		c.importe as pagoAplicado,
		0 as a,
		0 as b,
		0 as c,
		'RC'
		from mctasctes c, mrecibo r
		where
		c.nroOper= :nroOperacion and
		c.sucursal = :nroSucursal and
		c.clteProv = :codCliente and		
		c.clteprov = c.clteprov and
		c.nroOperCaja = r.nroOperCaja 	and
		r.fh_baja is null
		order by r.fecha

    </sql-query>
    
    <query name="findRecibosPorNroCaja">
    	<query-param name="nroOperCaja" type="integer"/>	    
	    <query-param name="codCliente" type="integer"/>
		
		FROM Mrecibo r
		WHERE
		r.nroOperCaja = :nroOperCaja
		and r.fhBaja is null
		and r.cliente = :codCliente
		
    </query>
    
    
    <sql-query name="findTotalReciboMrecibo">    
    	<query-param name="codCliente" type="integer"/>
    	
		select sum(importe) 
		from mRecibo 
		where cliente = :codCliente and fh_baja is null
	</sql-query>
    
    
	<sql-query name="findTotalReciboCompleto">    
    	<query-param name="codCliente" type="integer"/>
			select 
			sum(r.importe) 
			
			from mrecibo r,mclientes c
			where 
			r.cliente = c.codigo and
			c.codigo  = :codCliente
			and fh_baja is null
	</sql-query>
	
	<sql-query name="findTotalReciboMCtaCte">    
    	<query-param name="codCliente" type="integer"/>
			select  sum(importe) as importe 
			from mctasctes 
			where clteProv=:codCliente 
			and fhBaja is null and nroOperCaja > 0 
			and (tipoOper='Cobro Factura Cliente' or tipoOper='PagoAdel')
	</sql-query>
    
</hibernate-mapping>
